kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/damilola/AndroidStudioProjects/CurrencyConverter/app/src/main/java/com/assignment/currencyconverter/component/TextComponent.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:TextFieldComponent visibility:public modality:FINAL <> (text:kotlin.String, modifier:androidx.compose.ui.Modifier, onValueChange:kotlin.Function1<kotlin.String, kotlin.Unit>, keyboardOptions:androidx.compose.foundation.text.KeyboardOptions, placeholderText:kotlin.String, onFocusChange:kotlin.Function1<kotlin.Boolean, kotlin.Unit>, placeholderTextSize:kotlin.Float, maxLines:kotlin.Int) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:text index:0 type:kotlin.String
  VALUE_PARAMETER name:modifier index:1 type:androidx.compose.ui.Modifier
  VALUE_PARAMETER name:onValueChange index:2 type:kotlin.Function1<kotlin.String, kotlin.Unit>
  VALUE_PARAMETER name:keyboardOptions index:3 type:androidx.compose.foundation.text.KeyboardOptions
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.foundation.text.KeyboardOptions
  VALUE_PARAMETER name:placeholderText index:4 type:kotlin.String
  VALUE_PARAMETER name:onFocusChange index:5 type:kotlin.Function1<kotlin.Boolean, kotlin.Unit>
  VALUE_PARAMETER name:placeholderTextSize index:6 type:kotlin.Float
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Float
  VALUE_PARAMETER name:maxLines index:7 type:kotlin.Int
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Int
  BLOCK_BODY
    VAR name:interactionSource type:androidx.compose.foundation.interaction.MutableInteractionSource [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
        <T>: androidx.compose.foundation.interaction.MutableInteractionSource
        calculation: BLOCK type=kotlin.Function0<androidx.compose.foundation.interaction.MutableInteractionSource> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun TextFieldComponent$lambda$0 (): androidx.compose.foundation.interaction.MutableInteractionSource declared in com.assignment.currencyconverter.component.TextComponentKt' type=kotlin.Function0<androidx.compose.foundation.interaction.MutableInteractionSource> origin=INLINE_LAMBDA reflectionTarget=null
    VAR name:isFocused type:androidx.compose.runtime.State<kotlin.Boolean> [val]
      CALL 'public final fun collectIsFocusedAsState (): androidx.compose.runtime.State<kotlin.Boolean> declared in androidx.compose.foundation.interaction.FocusInteractionKt' type=androidx.compose.runtime.State<kotlin.Boolean> origin=null
        $receiver: GET_VAR 'val interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource [val] declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public abstract fun <get-value> (): T of androidx.compose.runtime.State declared in androidx.compose.runtime.State' type=kotlin.Boolean origin=GET_PROPERTY
          $this: GET_VAR 'val isFocused: androidx.compose.runtime.State<kotlin.Boolean> [val] declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=androidx.compose.runtime.State<kotlin.Boolean> origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Unit origin=INVOKE
            $this: GET_VAR 'onFocusChange: kotlin.Function1<kotlin.Boolean, kotlin.Unit> declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=VARIABLE_AS_FUNCTION
            p1: CONST Boolean type=kotlin.Boolean value=true
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Unit origin=INVOKE
            $this: GET_VAR 'onFocusChange: kotlin.Function1<kotlin.Boolean, kotlin.Unit> declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=VARIABLE_AS_FUNCTION
            p1: CONST Boolean type=kotlin.Boolean value=false
    CALL 'public final fun BasicTextField$default (value: kotlin.String, onValueChange: kotlin.Function1<kotlin.String, kotlin.Unit>, modifier: androidx.compose.ui.Modifier?, enabled: kotlin.Boolean, readOnly: kotlin.Boolean, textStyle: androidx.compose.ui.text.TextStyle?, keyboardOptions: androidx.compose.foundation.text.KeyboardOptions?, keyboardActions: androidx.compose.foundation.text.KeyboardActions?, singleLine: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, visualTransformation: androidx.compose.ui.text.input.VisualTransformation?, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource?, cursorBrush: androidx.compose.ui.graphics.Brush?, decorationBox: @[Composable] kotlin.Function1<@[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>, kotlin.Unit>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.foundation.text.BasicTextFieldKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      value: GET_VAR 'text: kotlin.String declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.String origin=null
      onValueChange: GET_VAR 'onValueChange: kotlin.Function1<kotlin.String, kotlin.Unit> declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=null
      modifier: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=androidx.compose.ui.Modifier origin=null
      enabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      readOnly: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      textStyle: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.TextStyle? value=null
      keyboardOptions: GET_VAR 'keyboardOptions: androidx.compose.foundation.text.KeyboardOptions declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=androidx.compose.foundation.text.KeyboardOptions origin=null
      keyboardActions: COMPOSITE type=androidx.compose.foundation.text.KeyboardActions? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.text.KeyboardActions? value=null
      singleLine: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      maxLines: GET_VAR 'maxLines: kotlin.Int declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.Int origin=null
      minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
        CONST Int type=kotlin.Int value=0
      visualTransformation: COMPOSITE type=androidx.compose.ui.text.input.VisualTransformation? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.text.input.VisualTransformation? value=null
      onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
        CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
      interactionSource: GET_VAR 'val interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource [val] declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
      cursorBrush: COMPOSITE type=androidx.compose.ui.graphics.Brush? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.graphics.Brush? value=null
      decorationBox: BLOCK type=kotlin.Function1<@[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<@[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>, kotlin.Unit> origin=null
          <T>: kotlin.Function1<@[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>, kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: kotlin.String, p1: kotlin.String, p2: kotlin.Float): kotlin.Function1<@[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<@[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>, kotlin.Unit> origin=null
            p0: GET_VAR 'text: kotlin.String declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.String origin=null
            p1: GET_VAR 'placeholderText: kotlin.String declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.String origin=null
            p2: GET_VAR 'placeholderTextSize: kotlin.Float declared in com.assignment.currencyconverter.component.TextComponentKt.TextFieldComponent' type=kotlin.Float origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun TextFieldComponent$lambda$3 ($text: kotlin.String, $placeholderText: kotlin.String, $placeholderTextSize: kotlin.Float, innerTextField: @[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>): kotlin.Unit? declared in com.assignment.currencyconverter.component.TextComponentKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: @[Composable] @[ParameterName(name = "innerTextField")] kotlin.Function0<kotlin.Unit>): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      $mask0: CONST Int type=kotlin.Int value=23992
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


